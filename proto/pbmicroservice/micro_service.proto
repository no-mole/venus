syntax = "proto3";

option go_package = "github.com/no-mole/venus/proto/pbmicroservice";

import "google/protobuf/empty.proto";

service MicroService {
  rpc Register(RegisterServicesRequest) returns (google.protobuf.Empty);
  rpc Discovery(ServiceInfo) returns (stream DiscoveryServiceResponse);
  rpc DiscoveryOnce(ServiceInfo)returns(DiscoveryServiceResponse);
  rpc ListServices(ListServicesRequest)returns(ListServicesResponse);
  rpc ListServiceVersions(ListServiceVersionsRequest)returns(ListServiceVersionsResponse);
}

message ListServiceVersionsRequest{
  // @cTags: binding:"required,min=3"
  string namespace = 1;//服务命名空间
  // @cTags: binding:"required"
  string service_name = 2;//服务名称
}

message ListServiceVersionsResponse{
  repeated string versions = 1;
}

message ListServicesRequest{
  // @cTags: binding:"required,min=3"
  string namespace = 1;//服务命名空间
}

message ListServicesResponse{
  repeated string services = 1;
}

message DiscoveryServiceResponse{
  repeated string endpoints = 1;
}

message RegisterServicesRequest{
  repeated ServiceInfo services = 1;
  int64 lease_id = 2;
}

message ServiceInfo {
  // @cTags: binding:"required,min=3"
  string namespace = 1;//服务命名空间
  // @cTags: binding:"required"
  string service_name = 2;//服务名称
  // @cTags: binding:"required"
  string service_version = 3;//服务版本
  // @cTags: binding:"required"
  string service_endpoint = 4;//服务入口
}

message ClientRegisterInfo{
  string register_time = 2;
  string register_access_key = 3;
  string register_host = 4;
  string register_ip = 5;
}

message ServiceEndpointInfo{
  ServiceInfo service_info = 1;
  ClientRegisterInfo client_info = 2;
}

message ServiceEndpointInfoItems{
  repeated ServiceEndpointInfo items = 1;
}